name: APLOSE Frontend Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
    types:
      - ready_for_review
jobs:
  playwright-test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "postgres"
          POSTGRES_DB: "postgres"
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      # Setup server
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install server dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Setup DB
        run: |
          poetry run ./manage.py migrate
          poetry run ./manage.py seed
      # Setup frontend
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      - name: Install Playwright Browsers
        working-directory: frontend
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        working-directory: frontend
        env:
          CI: true
        run: npm run test:playwright
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30
