map $http_referer $webroot {
    "~/app" "/usr/share/nginx/app";
    "~/"    "/usr/share/nginx/website";
}

server {
  listen 8080;
  server_name osmose;
  client_max_body_size 10M;

  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  location /app {
    root /usr/share/nginx/;
    proxy_intercept_errors on;
    error_page 404 = /app/index.html;
    proxy_no_cache 1;
    client_max_body_size 10M;
  }

  location /doc {
    # content location
    rewrite ^/doc/(.*) /$1 break;
    root /usr/share/nginx/doc;
    index /doc/index.html

    # exact matches -> reverse clean urls -> folders -> not found
    try_files $uri $uri.html $uri/ =404;

    # non existent pages
    error_page 404 /doc/404.html;

    # a folder without index.html raises 403 in this setup
    error_page 403 /doc/404.html;

    # adjust caching headers
    # files in the assets folder have hashes filenames
    location ~* ^/assets/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
  }

  location / {
    root /usr/share/nginx/website/;
    proxy_intercept_errors on;
    error_page 404 = /index.html;
    proxy_no_cache 1;
  }

  location /static {
    root $webroot;
  }

  location /api/ {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://${OSMOSE_BACK_HOST}:8000/api/;
    proxy_ssl_session_reuse off;
    proxy_set_header Host $http_host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
  }

  location /backend/ {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://${OSMOSE_BACK_HOST}:8000/backend/;
    proxy_ssl_session_reuse off;
    proxy_set_header Host $http_host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
  }

  location /backend/static/ {
    rewrite ^/backend/static/(.*) /$1 break;
    root /opt/staticfiles;
  }

  location /backend/static/datawork/ {
    rewrite ^/backend/static/datawork/(.*) /$1 break;
    root /opt/datawork;
  }
}
