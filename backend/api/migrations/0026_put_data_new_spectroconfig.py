# Generated by Django 3.2.23 on 2023-11-20 11:33
from copy import deepcopy

from django.db import migrations

from backend.api.models import SaveDatasetSpectroConfig, Dataset, AnnotationCampaign


def save_spectro_config(apps, schema_editor):
    for dataset in Dataset.objects.all():
        saveDatasetSpectroConfig = SaveDatasetSpectroConfig.objects.create(
            dataset_save=dataset,
        )

        spectro_configs = dataset.old_spectro_configs.all()

        saveDatasetSpectroConfig.spectro_configs_save.set(spectro_configs)
        saveDatasetSpectroConfig.save()


def update_spectro_config(apps, schema_editor):

    for dataset in Dataset.objects.all():
        saveDatasetSpectroConfigs = SaveDatasetSpectroConfig.objects.filter(
            dataset_save=dataset
        )

        for saveDatasetSpectroConfig in saveDatasetSpectroConfigs:
            for spectroConfig in saveDatasetSpectroConfig.spectro_configs_save.all():
                newSpectroConfig = deepcopy(spectroConfig)
                newSpectroConfig.pk = None
                newSpectroConfig.dataset = dataset

                spectroConfigName = newSpectroConfig.name.replace(" ", "_")
                datasetName = dataset.name.replace(" ", "_")
                newSpectroConfig.name = f"{spectroConfigName}__{datasetName}"
                newSpectroConfig.save()

                campaigns_NeedUpdate = AnnotationCampaign.objects.filter(
                    spectro_configs=spectroConfig
                )
                for campaign_NeedUpdate in campaigns_NeedUpdate:
                    campaign_NeedUpdate.spectro_configs.remove(spectroConfig)
                    campaign_NeedUpdate.spectro_configs.add(newSpectroConfig)
                    campaign_NeedUpdate.save()


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0025_savedatasetspectroconfig"),
    ]

    operations = [
        migrations.RunPython(save_spectro_config),
        migrations.RunPython(update_spectro_config),
    ]
