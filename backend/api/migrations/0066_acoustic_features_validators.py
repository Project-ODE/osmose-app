# Generated by Django 3.2.25 on 2024-11-18 16:08

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0065_acoustic_features"),
    ]

    operations = [
        migrations.AlterField(
            model_name="annotationresultacousticfeatures",
            name="duration",
            field=models.FloatField(
                blank=True,
                help_text="[s] Duration of the signal",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="annotationresultacousticfeatures",
            name="end_frequency",
            field=models.FloatField(
                blank=True,
                help_text="[Hz] Frequency at the end of the signal",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="annotationresultacousticfeatures",
            name="harmonics_count",
            field=models.IntegerField(
                blank=True,
                help_text="Number of harmonics in the signal",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="annotationresultacousticfeatures",
            name="level_peak_frequency",
            field=models.FloatField(
                blank=True,
                help_text="[Hz] The frequency at which the maximum level in the signal occurs",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="annotationresultacousticfeatures",
            name="max_frequency",
            field=models.IntegerField(
                blank=True,
                help_text="[Hz] Maximum frequency of the signal",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="annotationresultacousticfeatures",
            name="median_frequency",
            field=models.IntegerField(
                blank=True,
                help_text="[Hz] The frequency at which half of the frequencies of the whistle contour lie above and half of the frequencies of the whistle contour lie below",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="annotationresultacousticfeatures",
            name="min_frequency",
            field=models.IntegerField(
                blank=True,
                help_text="[Hz] Minimum frequency of the signal",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="annotationresultacousticfeatures",
            name="relative_peaks_count",
            field=models.IntegerField(
                blank=True,
                help_text="Number of relative minimum/maximum frequency in the signal",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="annotationresultacousticfeatures",
            name="start_frequency",
            field=models.FloatField(
                blank=True,
                help_text="[Hz] Frequency at the beginning of the signal",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="annotationresultacousticfeatures",
            name="steps_count",
            field=models.IntegerField(
                blank=True,
                help_text="Number of steps in the signal",
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
    ]
